name: Docker Deploy

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: self-hosted
    steps:
    - name: Initialize Docker
      shell: powershell
      run: |
        # Проверка доступности Docker
        docker --version
        docker ps -a
        
    - name: Cleanup old container
      shell: powershell
      run: |
        # Безопасное удаление предыдущего контейнера
        $container = docker ps -aq --filter "name=python-app"
        if ($container) {
          docker stop $container
          docker rm $container
          Write-Host "Old container removed"
        } else {
          Write-Host "No existing container found"
        }
        
    - name: Pull image
      shell: powershell
      run: |
        # Авторизация и загрузка образа
        $env:DOCKER_HOST = "npipe:////./pipe/docker_engine"
        $token = "${{ secrets.DOCKER_HUB_TOKEN }}"
        echo $token | docker login -u makarmatelenok --password-stdin
        docker pull makarmatelenok/kursach:latest
        
    - name: Run container
      shell: powershell
      run: |
        # Запуск контейнера напрямую через Docker
        docker run -d `
          -p 80:80 `
          --name python-app `
          --restart unless-stopped `
          makarmatelenok/kursach:latest
        
        # Проверка статуса
        docker ps -a
        Write-Host "Container started successfully"
